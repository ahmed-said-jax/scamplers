services:
  postgres:
    image: postgres:17-alpine
    restart: always
    user: root
    secrets:
      - db_root_user
      - db_root_password
      - db_name
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER_FILE=/run/secrets/db_root_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
      - POSTGRES_DB_FILE=/run/secrets/db_name
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    expose:
      - &db_port 5432
    healthcheck:
      test: pg_isready --dbname $(cat /run/secrets/db_name) || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
  scamplers-backend:
    build:
      context: .
      dockerfile: rust/Dockerfile
      target: final
    environment:
      PORT: &backend_port 8000
      DB_HOST: postgres
      DB_PORT: *db_port
    expose:
      - *backend_port
    secrets:
      - source: db_root_user
        uid: "10001"
      - source: db_root_password
        uid: "10001"
      - source: db_login_user_password
        uid: "10001"
      - source: db_name
        uid: "10001"
      - source: seed_data
        uid: "10001"
      - source: frontend_token
        uid: "10001"
    volumes:
      - logs:/logs
      - scamplers-core:/opt/scamplers-core
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      # TODO: interpolate backend_port
      test: curl http://localhost:8000/health || exit 1
      interval: 5s
      start_period: 10s
      start_interval: 1s
      timeout: 5s
      retries: 10
  scamplers-frontend:
    build:
      context: typescript
      args:
        NODE_ENV: production
      target: final
    environment:
      IN_DOCKER: "true"
      PORT: &frontend_port 8000
      BACKEND_HOST: &backend_host scamplers-backend
      BACKEND_PORT: *backend_port
    depends_on:
      scamplers-backend:
        condition: service_healthy
    healthcheck:
      # TODO: interpolate frontend_port
      test: curl http://localhost:8000/health || exit 1
      interval: 5s
      start_period: 5s
      start_interval: 1s
      timeout: 1s
      retries: 5
    volumes:
      - scamplers-core:/opt/scamplers-core
    secrets:
      - source: auth_secret
        uid: "10001"
      - source: auth_microsoft_entra_id_id
        uid: "10001"
      - source: auth_microsoft_entra_id_secret
        uid: "10001"
      - source: frontend_token
        uid: "10001"
  caddy:
    image: caddy:2-alpine
    environment:
      FRONTEND_HOST: scamplers-frontend
      FRONTEND_PORT: *frontend_port
      BACKEND_HOST: *backend_host
      BACKEND_PORT: *backend_port
      PUBLIC_URL: ${SCAMPLERS_PUBLIC_URL}
    restart: always
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/caddy:/etc/caddy
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      scamplers-frontend:
        condition: service_healthy
volumes:
  db-data:
  logs:
  caddy-data:
  caddy-config:
  scamplers-core:
secrets:
  db_root_user:
    environment: SCAMPLERS_DB_ROOT_USER
  db_root_password:
    environment: SCAMPLERS_DB_ROOT_PASSWORD
  db_login_user_password:
    environment: SCAMPLERS_DB_LOGIN_USER_PASSWORD
  db_name:
    environment: SCAMPLERS_DB_NAME
  auth_secret:
    environment: SCAMPLERS_AUTH_SECRET
  auth_microsoft_entra_id_id:
    environment: SCAMPLERS_AUTH_MICROSOFT_ENTRA_ID_ID
  auth_microsoft_entra_id_secret:
    environment: SCAMPLERS_AUTH_MICROSOFT_ENTRA_ID_SECRET
  frontend_token:
    environment: SCAMPLERS_FRONTEND_TOKEN
  seed_data:
    file: ${SCAMPLERS_SEED_DATA}
