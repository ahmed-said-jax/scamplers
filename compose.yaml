# TODO: the same alpine version is used twice - we can fix this somehow
services:
  postgres:
    image: postgres:17-alpine3.21
    restart: always
    user: root
    secrets:
      - db_root_user
      - db_root_password
      - db_name
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER_FILE=/run/secrets/db_root_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_root_password
      - POSTGRES_DB_FILE=/run/secrets/db_name
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    expose:
      - &db_port 5432
    healthcheck:
      test: pg_isready --dbname $(cat /run/secrets/db_name) || exit 1
      interval: 5s
      timeout: 5s
      retries: 10
  scamplers-backend:
    restart: always
    build:
      args:
        RUST_VERSION: 1.86
      context: .
      dockerfile: rust/Dockerfile
      target: final
    environment:
      PORT: ${SCAMPLERS_BACKEND_PORT}
      DB_HOST: &db_host postgres
      DB_PORT: *db_port
      PUBLIC_URL: ${SCAMPLERS_PUBLIC_URL}
    expose:
      - *backend_port
    secrets:
      - db_root_user
      - db_root_password
      - db_login_user_password
      - db_auth_user_password
      - db_name
      - seed_data
    volumes:
      - logs:/logs
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [CMD, curl, "http://localhost:$PORT/health"]
      interval: 5s
      start_period: 5s
      start_interval: 1s
      timeout: 1s
      retries: 5
  scamplers-auth:
    restart: always
    build:
      args:
        PYTHON_VERSION: 3.13
      context: python/scamplers-auth
      target: final
    depends_on:
      scamplers-backend:
        condition: service_healthy
    environment:
      PORT: ${SCAMPLERS_AUTH_PORT}
      DB_HOST: *db_host
      DB_PORT: *db_port
      BACKEND_HOST: &scamplers_backend scamplers-backend
      BACKEND_PORT: ${SCAMPLERS_BACKEND_PORT}
      AUTH_SUBDOMAIN: ${SCAMPLERS_AUTH_SUBDOMAIN}
      PUBLIC_URL: ${SCAMPLERS_PUBLIC_URL}
      MS_AUTH_PATH: &ms_auth_path /microsoft/login
      MS_AUTH_REDIRECT_PATH: /microsoft/redirect
    expose:
      - *auth_port:*auth_port
    secrets:
      - db_auth_user_password
      - db_name
      - ms_auth_client_id
      - ms_auth_client_credential
    healthcheck:
      test: [CMD, curl, "http://localhost:$PORT/health"]
      interval: 5s
      start_period: 5s
      start_interval: 1s
      timeout: 1s
      retries: 5
  scamplers-frontend:
    restart: always
    build:
      context: typescript/scamplers-frontend
      args:
        BUN_VERSION: 1.2
        ALPINE_VERSION: 3.21
      target: final
    environment:
        PORT: ${SCAMPLERS_FRONTEND_PORT}
        AUTH_SUBDOMAIN: ${SCAMPLERS_AUTH_SUBDOMAIN}
        PUBLIC_URL: ${SCAMPLERS_PUBLIC_URL}
        BACKEND_HOST: *scamplers_backend
        BACKEND_PORT: ${SCAMPLERS_BACKEND_PORT}
        MS_AUTH_PATH: *ms_auth_path
    depends_on:
      scamplers-backend:
        condition: service_healthy
      scamplers-auth:
        condition: service_healthy
    healthcheck:
      test: [CMD, curl, "http://localhost:$PORT/health"]
      interval: 5s
      start_period: 5s
      start_interval: 1s
      timeout: 1s
      retries: 5
  caddy:
    image: caddy:2.9.1-alpine
    restart: always
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - $PWD/caddy:/etc/caddy
      - caddy-data:/data
      - caddy-config:/config
    depends_on:
      scamplers-frontend:
        condition: service_healthy
volumes:
  db-data:
  logs:
  caddy-data:
  caddy-config:
secrets:
  db_root_user:
    environment: SCAMPLERS_DB_ROOT_USER
  db_root_password:
    environment: SCAMPLERS_DB_ROOT_PASSWORD
  db_login_user_password:
    environment: SCAMPLERS_DB_LOGIN_USER_PASSWORD
  db_auth_user_password:
    environment: SCAMPLERS_DB_AUTH_USER_PASSWORD
  db_name:
    environment: SCAMPLERS_DB_NAME
  ms_auth_client_id:
    environment: SCAMPLERS_MS_AUTH_CLIENT_ID
  ms_auth_client_credential:
    environment: SCAMPLERS_MS_AUTH_CLIENT_CREDENTIAL
  seed_data:
    file: ${SCAMPLERS_SEED_DATA}
